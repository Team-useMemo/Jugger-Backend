name: Deploy Spring Backend

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout Spring Code
        uses: actions/checkout@v3

      - name: üîê application.properties ÏÉùÏÑ±
        run: |
          mkdir -p src/main/resources

          echo "spring.webflux.multipart.enabled=true" >> src/main/resources/application.properties
          echo "spring.data.mongodb.uri=${{ secrets.MONGO_URL }}" >> src/main/resources/application.properties
          echo "spring.cloud.aws.credentials.access-key=${{ secrets.AWS_ACCESS_KEY }}" >> src/main/resources/application.properties
          echo "spring.cloud.aws.credentials.secret-key=${{ secrets.AWS_SECRET_KEY }}" >> src/main/resources/application.properties
          echo "spring.cloud.aws.region.static=${{ secrets.AWS_REGION }}" >> src/main/resources/application.properties
          echo "spring.cloud.aws.s3.bucket=${{ secrets.S3_BUCKET }}" >> src/main/resources/application.properties
          echo "spring.jwt.secret=${{ secrets.JWT_SECRET }}" >> src/main/resources/application.properties
          echo "spring.jwt.refresh-token-duration=${{ secrets.JWT_REFRESH }}" >> src/main/resources/application.properties
          echo "spring.jwt.access-token-duration=${{ secrets.JWT_ACCESS }}" >> src/main/resources/application.properties
          echo "master.token=${{ secrets.MASTER_TOKEN }}" >> src/main/resources/application.properties


          # Í≥µÌÜµ Kakao ÏÑ§Ï†ï
          echo "kakao.client-id=${{ secrets.KAKAO_CLIENT_ID }}" >> src/main/resources/application.properties
          echo "kakao.client-secret=${{ secrets.KAKAO_SECRET }}" >> src/main/resources/application.properties

          # Î∏åÎûúÏπòÏóê Îî∞Îùº redirect-uriÎßå Î∂ÑÍ∏∞
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "kakao.redirect-uri=${{ secrets.KAKAO_REDIRECT_URI }}" >> src/main/resources/application.properties
            echo "master.id=${{ secrets.MASTER_ID }}" >> src/main/resources/application.properties
          else
            echo "kakao.redirect-uri=${{ secrets.KAKAO_REDIRECT_URI_DEV }}" >> src/main/resources/application.properties
            echo "master.id=${{ secrets.MASTER_ID_DEV }}" >> src/main/resources/application.properties
          fi
        shell: bash

      - name: ‚òï Gradle Build
        run: ./gradlew build -x test

      - name: üê≥ Docker Hub Î°úÍ∑∏Ïù∏
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üì¶ Docker Build & Push
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:${IMAGE_TAG} .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${IMAGE_TAG}

      - name: üöÄ EC2 SSH Ï†ëÏÜç ÌõÑ Î∞∞Ìè¨
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.EC2_HOST || secrets.EC2_HOST_DEV }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ github.ref == 'refs/heads/main' && secrets.EC2_KEY || secrets.EC2_KEY_DEV }}
          envs: GITHUB_REF_NAME
          script: |
            IMAGE_TAG=${{ github.sha }}
            
            echo "Branch: $GITHUB_REF_NAME"
              
              if [[ "$GITHUB_REF_NAME" == "main" ]]; then
              cd ~/my-app
              else
              cd ~/app
              fi

            sed -i "s|image: .*/backend:.*|image: ${{ secrets.DOCKER_USERNAME }}/backend:${IMAGE_TAG}|" docker-compose.yml

            docker compose pull backend
            docker compose up -d backend
