name: Deploy Spring Backend

on:
  push:
    branches: [ "main", "dev","feat/#3-ci/cd" ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Spring Code
        uses: actions/checkout@v3

      - name: 🔐 application.properties 생성
        run: |
          mkdir -p src/main/resources
#          echo "spring.datasource.url=${{ secrets.SPRING_DATASOURCE_URL }}" >> src/main/resources/application.properties
#          echo "spring.datasource.username=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> src/main/resources/application.properties
#          echo "spring.datasource.password=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> src/main/resources/application.properties
#          echo "jwt.secret=${{ secrets.JWT_SECRET }}" >> src/main/resources/application.properties
#          echo "spring.profiles.active=${{ secrets.SPRING_PROFILES_ACTIVE }}" >> src/main/resources/application.properties

      - name: ☕ Gradle Build (jar 생성)
        run: ./gradlew build -x test

      - name: 🐳 Docker Hub 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Spring 이미지 Build & Push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: 🚀 EC2에서 backend 재시작
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/my-app
            docker-compose pull backend
            docker-compose up -d backend
